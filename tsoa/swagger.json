{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"roleId": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"roleId",
					"name",
					"id"
				],
				"type": "object"
			},
			"ChatCompletionTokenLogprob.TopLogprob": {
				"properties": {
					"token": {
						"type": "string",
						"description": "The token."
					},
					"bytes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"nullable": true,
						"description": "A list of integers representing the UTF-8 bytes representation of the token.\nUseful in instances where characters are represented by multiple tokens and\ntheir byte representations must be combined to generate the correct text\nrepresentation. Can be `null` if there is no bytes representation for the token."
					},
					"logprob": {
						"type": "number",
						"format": "double",
						"description": "The log probability of this token, if it is within the top 20 most likely\ntokens. Otherwise, the value `-9999.0` is used to signify that the token is very\nunlikely."
					}
				},
				"required": [
					"token",
					"bytes",
					"logprob"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatCompletionTokenLogprob": {
				"properties": {
					"token": {
						"type": "string",
						"description": "The token."
					},
					"bytes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"nullable": true,
						"description": "A list of integers representing the UTF-8 bytes representation of the token.\nUseful in instances where characters are represented by multiple tokens and\ntheir byte representations must be combined to generate the correct text\nrepresentation. Can be `null` if there is no bytes representation for the token."
					},
					"logprob": {
						"type": "number",
						"format": "double",
						"description": "The log probability of this token, if it is within the top 20 most likely\ntokens. Otherwise, the value `-9999.0` is used to signify that the token is very\nunlikely."
					},
					"top_logprobs": {
						"items": {
							"$ref": "#/components/schemas/ChatCompletionTokenLogprob.TopLogprob"
						},
						"type": "array",
						"description": "List of the most likely tokens and their log probability, at this token\nposition. In rare cases, there may be fewer than the number of requested\n`top_logprobs` returned."
					}
				},
				"required": [
					"token",
					"bytes",
					"logprob",
					"top_logprobs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatCompletion.Choice.Logprobs": {
				"description": "Log probability information for the choice.",
				"properties": {
					"content": {
						"items": {
							"$ref": "#/components/schemas/ChatCompletionTokenLogprob"
						},
						"type": "array",
						"nullable": true,
						"description": "A list of message content tokens with log probability information."
					}
				},
				"required": [
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatCompletionMessage.FunctionCall": {
				"properties": {
					"arguments": {
						"type": "string",
						"description": "The arguments to call the function with, as generated by the model in JSON\nformat. Note that the model does not always generate valid JSON, and may\nhallucinate parameters not defined by your function schema. Validate the\narguments in your code before calling your function."
					},
					"name": {
						"type": "string",
						"description": "The name of the function to call."
					}
				},
				"required": [
					"arguments",
					"name"
				],
				"type": "object",
				"additionalProperties": false,
				"deprecated": true
			},
			"ChatCompletionMessageToolCall.Function": {
				"description": "The function that the model called.",
				"properties": {
					"arguments": {
						"type": "string",
						"description": "The arguments to call the function with, as generated by the model in JSON\nformat. Note that the model does not always generate valid JSON, and may\nhallucinate parameters not defined by your function schema. Validate the\narguments in your code before calling your function."
					},
					"name": {
						"type": "string",
						"description": "The name of the function to call."
					}
				},
				"required": [
					"arguments",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatCompletionMessageToolCall": {
				"properties": {
					"id": {
						"type": "string",
						"description": "The ID of the tool call."
					},
					"function": {
						"$ref": "#/components/schemas/ChatCompletionMessageToolCall.Function",
						"description": "The function that the model called."
					},
					"type": {
						"type": "string",
						"enum": [
							"function"
						],
						"nullable": false,
						"description": "The type of the tool. Currently, only `function` is supported."
					}
				},
				"required": [
					"id",
					"function",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatCompletionMessage": {
				"description": "A chat completion message generated by the model.",
				"properties": {
					"content": {
						"type": "string",
						"nullable": true,
						"description": "The contents of the message."
					},
					"role": {
						"type": "string",
						"enum": [
							"assistant"
						],
						"nullable": false,
						"description": "The role of the author of this message."
					},
					"function_call": {
						"$ref": "#/components/schemas/ChatCompletionMessage.FunctionCall",
						"deprecated": true
					},
					"tool_calls": {
						"items": {
							"$ref": "#/components/schemas/ChatCompletionMessageToolCall"
						},
						"type": "array",
						"description": "The tool calls generated by the model, such as function calls."
					}
				},
				"required": [
					"content",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatCompletion.Choice": {
				"properties": {
					"finish_reason": {
						"type": "string",
						"enum": [
							"stop",
							"length",
							"tool_calls",
							"content_filter",
							"function_call"
						],
						"description": "The reason the model stopped generating tokens. This will be `stop` if the model\nhit a natural stop point or a provided stop sequence, `length` if the maximum\nnumber of tokens specified in the request was reached, `content_filter` if\ncontent was omitted due to a flag from our content filters, `tool_calls` if the\nmodel called a tool, or `function_call` (deprecated) if the model called a\nfunction."
					},
					"index": {
						"type": "number",
						"format": "double",
						"description": "The index of the choice in the list of choices."
					},
					"logprobs": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ChatCompletion.Choice.Logprobs"
							}
						],
						"nullable": true,
						"description": "Log probability information for the choice."
					},
					"message": {
						"$ref": "#/components/schemas/ChatCompletionMessage",
						"description": "A chat completion message generated by the model."
					}
				},
				"required": [
					"finish_reason",
					"index",
					"logprobs",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CompletionUsage": {
				"description": "Usage statistics for the completion request.",
				"properties": {
					"completion_tokens": {
						"type": "number",
						"format": "double",
						"description": "Number of tokens in the generated completion."
					},
					"prompt_tokens": {
						"type": "number",
						"format": "double",
						"description": "Number of tokens in the prompt."
					},
					"total_tokens": {
						"type": "number",
						"format": "double",
						"description": "Total number of tokens used in the request (prompt + completion)."
					}
				},
				"required": [
					"completion_tokens",
					"prompt_tokens",
					"total_tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatCompletion": {
				"description": "Represents a chat completion response returned by model, based on the provided\ninput.",
				"properties": {
					"id": {
						"type": "string",
						"description": "A unique identifier for the chat completion."
					},
					"choices": {
						"items": {
							"$ref": "#/components/schemas/ChatCompletion.Choice"
						},
						"type": "array",
						"description": "A list of chat completion choices. Can be more than one if `n` is greater\nthan 1."
					},
					"created": {
						"type": "number",
						"format": "double",
						"description": "The Unix timestamp (in seconds) of when the chat completion was created."
					},
					"model": {
						"type": "string",
						"description": "The model used for the chat completion."
					},
					"object": {
						"type": "string",
						"enum": [
							"chat.completion"
						],
						"nullable": false,
						"description": "The object type, which is always `chat.completion`."
					},
					"system_fingerprint": {
						"type": "string",
						"description": "This fingerprint represents the backend configuration that the model runs with.\n\nCan be used in conjunction with the `seed` request parameter to understand when\nbackend changes have been made that might impact determinism."
					},
					"usage": {
						"$ref": "#/components/schemas/CompletionUsage",
						"description": "Usage statistics for the completion request."
					}
				},
				"required": [
					"id",
					"choices",
					"created",
					"model",
					"object"
				],
				"type": "object",
				"additionalProperties": false
			},
			"askProps": {
				"properties": {
					"prompt": {
						"type": "string"
					}
				},
				"required": [
					"prompt"
				],
				"type": "object"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "express",
		"contact": {}
	},
	"paths": {
		"/user/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "ユーザーの作成",
				"security": [],
				"parameters": []
			}
		},
		"/openai/ask": {
			"post": {
				"operationId": "PostAsk",
				"responses": {
					"200": {
						"description": "ChatCompletion",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChatCompletion"
								}
							}
						}
					}
				},
				"summary": "OpenAIにリクエスト送信",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/askProps"
							}
						}
					}
				}
			}
		},
		"/messages/{chatId}": {
			"get": {
				"operationId": "GetMessages",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"id": {
												"type": "number",
												"format": "double"
											}
										},
										"required": [
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"summary": "メッサージの取得",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "chatId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/message/{messageId}": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"type": "string"
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"name",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"summary": "単一メッセージの取得",
				"security": [],
				"parameters": [
					{
						"description": "対象のメッセージId",
						"in": "path",
						"name": "messageId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/message": {
			"post": {
				"operationId": "CreateMessage",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "単一メッセージの作成",
				"security": [],
				"parameters": []
			}
		},
		"/chats/{userId}": {
			"get": {
				"operationId": "GetChats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"id": {
												"type": "number",
												"format": "double"
											}
										},
										"required": [
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"summary": "チャット一覧の取得",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/chat/{chatId}": {
			"get": {
				"operationId": "GetChat",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"summary": "単一チャットの取得",
				"security": [],
				"parameters": [
					{
						"description": "対象のチャットId",
						"in": "path",
						"name": "chatId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/chat": {
			"post": {
				"operationId": "CreateChat",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "単一チャットの作成",
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}